IF OBJECT_ID (N'dbo.RUN') is not null drop table RUNCREATE TABLE RUN ( ID int IDENTITY, NAME varchar(20), STAGE tinyint, TIME time);insert into RUN (NAME,STAGE,TIME)VALUES('run1', 1,'00:10:44'),('run1', 2,'00:08:00'),('run1', 3,'00:09:00'),('run2', 1,'00:11:00'),('run2', 2,'00:09:44'),('run2', 3,'00:08:33'),('run3', 1,'00:07:00'),('run3', 2,'00:10:30'),('run3', 3,'00:09:15'),('run4', 1,'00:10:15'),('run4', 2,'00:11:33'),('run4', 3,'00:08:15'),('run5', 1,'00:07:15'),('run5', 2,'00:09:33'),('run5', 3,'00:10:00')SELECT * ,LAG (TIME,1,'00:00') OVER (PARTITION BY STAGE ORDER BY TIME,ID) AS PREV_TIME_ST ,LAG (TIME,1,'00:00') OVER (PARTITION BY NAME ORDER BY TIME) AS PREV_TIME_NM ,FIRST_VALUE ([TIME]) OVER (PARTITION BY STAGE ORDER BY TIME ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS PREV_TIME_FV ,FIRST_VALUE ([TIME]) OVER (PARTITION BY STAGE ORDER BY TIME) AS BEST_TIME ,ROW_NUMBER() OVER (PARTITION BY STAGE ORDER BY NAME) AS RN ,RANK() OVER (ORDER BY NAME) AS RANK ,DENSE_RANK () OVER (ORDER BY NAME) AS DR ,NTILE(3) OVER (ORDER BY NAME) AS NTILEFROM RUNORDER BY STAGE, NAME


--PIVOT по этапам
WITH CTE AS (			select NAME, STAGE, TIME			from RUN			)SELECT NAME, [1],[2],[3]FROM CTEPIVOT (MIN(TIME)FOR STAGE IN ([1],[2],[3])) AS PORDER BY NAME--вариант PIVOT по бегунам
WITH CTE AS (			select NAME, STAGE, TIME			from RUN			)SELECT STAGE, run1,run2,run3,run4,run5FROM CTEPIVOT (MIN(TIME)FOR NAME IN (run1,run2,run3,run4,run5)) AS P


IF OBJECT_ID ('dbo.DAKAR') is not null drop table DAKAR;CREATE TABLE DAKAR (ID TINYINT IDENTITY,COMAND VARCHAR(10),TIME TIME);INSERT INTO dbo.DAKAR (COMAND, TIME) VALUES ('KAMAZ','01:09:05'),('Iveco','01:09:23'),('Iveco','01:09:58'),('Iveco','01:10:49'),('KAMAZ','01:12:38'),('KAMAZ','01:12:54'),('KAMAZ','01:13:07'),('Tatra','01:14:49'),('MAZ','01:15:13'),('Tatra','01:15:38'),('Tatra','01:16:45'),('LIAZ','01:18:10'),('Renault','01:19:31'),('MAZ','01:19:32'),('Renault','01:21:20'),('Renault','01:21:47'),('MAZ','01:21:50'),('Iveco','01:26:24'),('Hino','01:32:46'),('MAN','01:39:14'),('DAF','01:41:16'),('MAN','01:42:06'),('MAN','01:44:50'),('DAF','01:45:35'),('MAN','01:46:47'),('MAN','02:20:11'),('DAF','02:27:13'),('Hino','02:33:30'),('Iveco','02:34:19'),('DAF','02:39:06'),('MAN','03:09:27'),('MAN','07:33:02'),('Ford','13:48:45'),('Ford','15:56:08'),('MAN','23:00:00'),('MAN','23:10:00'),('Iveco','23:20:00'),('Iveco','23:30:00'),('DAF','23:50:00'),('MAN','23:59:00')

select *,LAG (TIME,1,'00:00:00') OVER (PARTITION BY COMAND ORDER BY TIME) as PREV_TIME,DATEDIFF(s, TIME, (LAG (TIME,1,'00:00:00') OVER (PARTITION BY COMAND ORDER BY TIME))) as SALDO,DATEDIFF(s, TIME, (LAG (TIME,1,'00:00:00') OVER (PARTITION BY COMAND ORDER BY TIME)))/60 as SALDO60,DATEDIFF(mi, TIME, (LAG (TIME,1,'00:00:00') OVER (PARTITION BY COMAND ORDER BY TIME))) as SALDOMI,FIRST_VALUE (TIME) OVER (PARTITION BY COMAND ORDER BY TIME) as BEST_TIME,LAST_VALUE (TIME) OVER (ORDER BY COMAND ) as FAIL_TIMEfrom DAKAR